<script>console.log({{ _context | json_encode | raw }});</script>

<!-- Page Header-->
<div class="page-header no-margin-bottom">
    <div class="container-fluid">
        <h2 class="h5 no-margin-bottom">{{ server.name }}'s page</h2>
    </div>
</div>
<section class="section-content">
    <div class="container-fluid">
        {% if players %}
            <div class="row">
                <div class="col-lg-12">
                    <div class="messages-block block">
                        <div class="title">
                            <strong>Currently playing tees</strong>
                        </div>
                        <div class="messages pre-scrollable pre-scrollable-needed">
                            {% for player in players %}
                                <a href="{{ player.url|raw }}" class="message d-flex align-items-center">
                                    <div class="profile"><img src="/images/user.png" alt="{{ player.name|raw }}"
                                                              class="img-fluid">
                                        <div class="status online"></div>
                                    </div>
                                    <div class="content">
                                        <strong class="d-block">{{ player.name|raw }}</strong>
                                        <span class="d-block">{{ clan.name|raw }} </span>
                                        <small class="date d-block">{{ player.lastseen|raw }}</small>
                                    </div>
                                </a>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}
        <div class="row">
            <div class="col-lg-6">
                <div class="pie-chart chart block">
                    <div class="title"><strong>{{ server.name|raw }}'s player maps</strong></div>
                    <div class="radar-chart chart margin-bottom-sm">
                        <canvas id="serverMaps"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="pie-chart chart block">
                    <div class="title"><strong>{{ server.name|raw }}'s player countries</strong></div>
                    <div class="radar-chart chart margin-bottom-sm">
                        <canvas id="serverCountries"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="line-chart block chart">
                    <div class="title"><strong>{{ server.name|raw }}'s online probability</strong></div>
                    <canvas id="onlineLineChartDays"></canvas>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="line-chart block chart">
                    <div class="title"><strong>{{ server.name|raw }}'s online probability per day</strong></div>
                    <canvas id="onlineLineChartHours"></canvas>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(document).ready(function () {
        class ChartHelper {

            static chartColors(chart, gradient) {
                /*Gradients
                  The keys are percentage and the values are the color in a rgba format.
                  You can have as many "color stops" (%) as you like.
                  0% and 100% is not optional.*/

                //Get a sorted array of the gradient keys
                let gradientKeys = Object.keys(gradient);
                gradientKeys.sort(function (a, b) {
                    return +a - +b;
                });

                //Find datasets and length
                let chartType = chart.config.type;
                let datasets;
                let setsCount;
                switch (chartType) {
                    case "pie":
                    case "doughnut":
                        datasets = chart.config.data.datasets[0];
                        setsCount = datasets.data.length;
                        break;
                    case "bar":
                    case "line":
                        datasets = chart.config.data.datasets;
                        setsCount = datasets.length;
                        break;
                }

                //Calculate colors
                let chartColors = [];
                for (let i = 0; i < setsCount; i++) {
                    let gradientIndex = (i + 1) * (100 / (setsCount + 1)); //Find where to get a color from the gradient
                    for (let j = 0; j < gradientKeys.length; j++) {
                        let gradientKey = gradientKeys[j];
                        if (gradientIndex === +gradientKey) { //Exact match with a gradient key - just get that color
                            chartColors[i] = 'rgba(' + gradient[gradientKey].toString() + ')';
                            break;
                        } else if (gradientIndex < +gradientKey) { //It's somewhere between this gradient key and the previous
                            let prevKey = gradientKeys[j - 1];
                            let gradientPartIndex = (gradientIndex - prevKey) / (gradientKey - prevKey); //Calculate where
                            let color = [];
                            for (let k = 0; k < 4; k++) { //Loop through Red, Green, Blue and Alpha and calculate the correct color and opacity
                                color[k] = gradient[prevKey][k] - ((gradient[prevKey][k] - gradient[gradientKey][k]) * gradientPartIndex);
                                if (k < 3) color[k] = Math.round(color[k]);
                            }
                            chartColors[i] = 'rgba(' + color.toString() + ')';
                            break;
                        }
                    }
                }

                //Copy colors to the chart
                for (let i = 0; i < setsCount; i++) {
                    switch (chartType) {
                        case "pie":
                        case "doughnut":
                            if (!datasets.backgroundColor) datasets.backgroundColor = [];
                            datasets.backgroundColor[i] = chartColors[i];
                            if (!datasets.borderColor) datasets.borderColor = [];
                            datasets.borderColor[i] = "rgba(255,255,255,1)";
                            break;
                        case "bar":
                            datasets[i].backgroundColor = chartColors[i];
                            datasets[i].borderColor = "rgba(255,255,255,0)";
                            break;
                        case "line":
                            datasets[i].borderColor = chartColors[i];
                            datasets[i].backgroundColor = "rgba(255,255,255,0)";
                            break;
                    }
                }

                //Update the chart to show the new colors
                chart.update();
            };
        }

        'use strict';

        Chart.defaults.global.defaultFontColor = '#75787c';

        // ------------------------------------------------------- //
        // Online probability days
        // ------------------------------------------------------ //
        new Chart($('#onlineLineChartDays'), {
            type: 'line',
            options: {
                legend: {
                    labels: {
                        fontColor: "#777",
                        fontSize: 12
                    }
                },
                scales: {
                    xAxes: [{
                        display: false,
                        gridLines: {
                            color: 'transparent'
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            max: 100,
                            min: 0
                        },
                        display: true,
                        gridLines: {
                            color: 'transparent'
                        }
                    }]
                },
            },
            data: {
                labels: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                datasets: [
                    {
                        label: "Weekday Online Probability",
                        fill: true,
                        lineTension: 0.2,
                        backgroundColor: "rgba(134, 77, 217, 0.88)",
                        borderColor: "rgba(134, 77, 217, 088)",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        borderWidth: 1,
                        pointBorderColor: "rgba(134, 77, 217, 0.88)",
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(134, 77, 217, 0.88)",
                        pointHoverBorderColor: "rgba(134, 77, 217, 0.88)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10,
                        data: {{ days|json_encode|raw }},
                        spanGaps: false
                    }
                ]
            }
        });

        // ------------------------------------------------------- //
        // Online probability hours
        // ------------------------------------------------------ //
        new Chart($('#onlineLineChartHours'), {
            type: 'line',
            options: {
                legend: {
                    labels: {
                        fontColor: "#777",
                        fontSize: 12
                    }
                },
                scales: {
                    xAxes: [{
                        display: false,
                        gridLines: {
                            color: 'transparent'
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            max: 100,
                            min: 0
                        },
                        display: true,
                        gridLines: {
                            color: 'transparent'
                        }
                    }]
                },
            },
            data: {
                labels: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"],
                datasets: [
                    {
                        label: "Weekday Online Probability",
                        fill: true,
                        lineTension: 0.2,
                        backgroundColor: "rgba(134, 77, 217, 0.88)",
                        borderColor: "rgba(134, 77, 217, 088)",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        borderWidth: 1,
                        pointBorderColor: "rgba(134, 77, 217, 0.88)",
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(134, 77, 217, 0.88)",
                        pointHoverBorderColor: "rgba(134, 77, 217, 0.88)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10,
                        data: {{ hours|json_encode|raw }},
                        spanGaps: false
                    }
                ]
            }
        });

        // ------------------------------------------------------- //
        // Played maps pie chart
        // ------------------------------------------------------ //
        let playedMapsChart = new Chart($('#serverMaps'), {
            type: 'pie',
            options: {
                legend: {
                    display: true,
                    position: "left"
                },
                tooltips: {
                    callbacks: {
                        title: function(tooltipItem, data) {
                            return data['labels'][tooltipItem[0]['index']];
                        },
                        label: function(tooltipItem, data) {
                            let dataset = data['datasets'][0];
                            let percent = Math.round((dataset['data'][tooltipItem['index']] / dataset["_meta"][Object.keys(dataset["_meta"])[0]]['total']) * 100);
                            return percent + '%';
                        },
                    },
                }
            },
            data: {
                labels: {{ mapNames|json_encode|raw }},
                datasets: [
                    {
                        data: {{ mapValues|json_encode|raw }},
                        borderWidth: 0,
                        hoverBackgroundColor: '#4313a0',
                    }]
            }
        });

        // ------------------------------------------------------- //
        // Player countries pie chart
        // ------------------------------------------------------ //
        let playerCountriesChart = new Chart($('#serverCountries'), {
            type: 'pie',
            options: {
                legend: {
                    display: true,
                    position: "left"
                },
                tooltips: {
                    callbacks: {
                        title: function(tooltipItem, data) {
                            return data['labels'][tooltipItem[0]['index']];
                        },
                        label: function(tooltipItem, data) {
                            let dataset = data['datasets'][0];
                            let percent = Math.round((dataset['data'][tooltipItem['index']] / dataset["_meta"][Object.keys(dataset["_meta"])[0]]['total']) * 100);
                            return percent + '%';
                        },
                    },
                }
            },
            data: {
                labels: {{ countryNames|json_encode|raw }},
                datasets: [
                    {
                        data: {{ countryValues|json_encode|raw }},
                        borderWidth: 0,
                        backgroundColor: [
                            '#723ac3',
                            "#864DD9",
                            "#9762e6",
                        ],
                        hoverBackgroundColor: [
                            '#723ac3',
                            "#864DD9",
                            "#9762e6",
                        ]
                    }]
            }
        });

        ChartHelper.chartColors(playedMapsChart, {0: [117, 46, 224, 1], 100: [166, 120, 235, 1]});
        ChartHelper.chartColors(playerCountriesChart, {0: [117, 46, 224, 1], 100: [166, 120, 235, 1]});

    });
</script>
